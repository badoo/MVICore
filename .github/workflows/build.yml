name: Build

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
      - uses: gradle/actions/wrapper-validation@v3
      - uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/master' }}
      - name: "Build project & run tests"
        run: >
          ./gradlew
          build
          projectHealth
          mergeLintSarif
          mergeDetektSarif
          :plugins:buildPlugins
          --continue
      - name: "Verify publishing"
        run: ./gradlew publishToMavenLocal
      - uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: build/lint-merged.sarif
          category: lint
      - uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: build/detekt-merged.sarif
          category: detekt
      - name: Upload failure artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: |
            **/build/reports/
            !**/build/reports/dependency-analysis/

  instrumentation-tests:
    name: Instrumentation tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
      - uses: gradle/actions/wrapper-validation@v3
      - uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/master' }}
      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
      - name: Pre build sources before launching emulator
        run: ./gradlew compileDebugAndroidTestSources
      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-29
      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          # Use API 29 https://github.com/ReactiveCircus/android-emulator-runner/issues/222
          api-level: 29
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."
      - name: Instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          # Use API 29 https://github.com/ReactiveCircus/android-emulator-runner/issues/222
          api-level: 29
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: |
            adb logcat > logcat.out &
            ./gradlew connectedCheck
      - name: Upload failed instrumentation artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: instrumentation-failures
          path: |
            **/build/reports
            logcat.out

  check-documentation:
    name: Check documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - run: cp CHANGELOG.md documentation/changelog.md
      - run: pip install mkdocs-material
      - run: mkdocs build --strict
